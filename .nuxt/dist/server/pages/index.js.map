{"version":3,"file":"pages/index.js","sources":["webpack:///./pages/index.vue?f443","webpack:///./pages/index.vue?7f59","webpack:///./pages/index.vue?bb67","webpack:///./pages/index.vue?eeea","webpack:///./pages/index.vue","webpack:///./pages/index.vue?b1ff","webpack:///./pages/index.vue?b245"],"sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--3-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--3-oneOf-1-2!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add CSS to SSR context\nvar add = require(\"!../node_modules/vue-style-loader/lib/addStylesServer.js\").default\nmodule.exports.__inject__ = function (context) {\n  add(\"1b7833da\", content, true, context)\n};","import mod from \"-!../node_modules/vue-style-loader/index.js??ref--3-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--3-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--3-oneOf-1-2!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/vue-style-loader/index.js??ref--3-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--3-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--3-oneOf-1-2!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=css&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"html{background:#000}.container{margin:0 auto;min-height:100vh;align-items:center;text-align:center;flex-direction:column}.container,.row{width:100%;display:flex;justify-content:center}.row{flex-direction:row}.chart,.controls,.stats{background:#111;text-align:left;padding:20px;border-radius:4px;width:100%;max-width:400px;font:1rem Inconsolata,monospace}.chart{margin-left:20px;padding:0;min-height:300px}.apexcharts-legend-text,.chart text{color:green!important;fill:green;font:1rem Inconsolata,monospace!important}.stats{color:green}.controls{color:#fff;margin-left:20px}.button,.switch{background:#0e2135;border-color:#0e2135;color:#fff}@media screen and (max-width:768px){.chart,.controls,.stats{width:90%;margin:0}.stats{margin-top:20px}.chart{margin:20px 0}.row{flex-direction:column;justify-content:center;align-items:center}}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_vm._ssrNode(\"<div class=\\\"row\\\">\",\"</div>\",[_vm._ssrNode(\"<div class=\\\"stats\\\">\"+(_vm._s(_vm.stats))+\"</div> \"),_vm._ssrNode(\"<div class=\\\"chart\\\">\",\"</div>\",[_c('client-only',[_c('apexchart',{ref:\"chart\",staticClass:\"apex-chart\",attrs:{\"width\":\"100%\",\"height\":\"100%\",\"options\":_vm.chartOptions,\"series\":_vm.chartSeries}})],1)],1)],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment-timezone'\nimport prettyMilliseconds from 'pretty-ms'\nimport { mapGetters } from 'vuex'\nexport default {\n  components: {},\n  props: {},\n  data: function () {\n    return {\n      lightsStatus: 0,\n      chartSeries: [\n        {\n          name: 'Humidity',\n          data: [],\n        },\n        {\n          name: 'Temperature',\n          data: [],\n        },\n      ],\n      chartOptions: {\n        legend: {\n          show: true,\n          offsetX: 0,\n          offsetY: 5,\n          markers: {\n            width: 8,\n            height: 8,\n          },\n        },\n        grid: {\n          show: false,\n          padding: {\n            top: 0,\n            right: 0,\n            bottom: 10,\n            left: 0,\n          },\n        },\n        colors: ['#FF0000', '#0000FF'],\n        chart: {\n          id: 'realtime',\n          height: 350,\n          type: 'line',\n          animations: {\n            enabled: true,\n            easing: 'linear',\n            dynamicAnimation: {\n              speed: 1000 * 60,\n            },\n          },\n          toolbar: {\n            show: false,\n          },\n          zoom: {\n            enabled: false,\n          },\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        stroke: {\n          width: 2,\n          curve: 'smooth',\n        },\n        markers: {\n          size: 0,\n        },\n        tooltip: {\n          theme: 'dark',\n          x: {\n            show: true,\n            formatter: (val) => {\n              return moment(val).format('hh:mm:ss a')\n            },\n          },\n        },\n        xaxis: {\n          axisBorder: {\n            show: false,\n          },\n          axisTicks: {\n            show: false,\n          },\n          range: 600000,\n          tickAmount: 2,\n          tooltip: {\n            formatter: (val) => {\n              return moment(val).format('hh:mm:ss a')\n            },\n          },\n          labels: {\n            show: true,\n            datetimeUTC: false,\n            formatter: (val) => {\n              return moment(val).format('hh:mm a')\n            },\n            datetimeFormatter: {\n              year: 'yyyy',\n              month: \"MMM 'yy\",\n              day: 'dd MMM',\n              hour: 'hh:mm a',\n            },\n          },\n        },\n        yaxis: [\n          {\n            // seriesName: 'Temperature',\n            decimalsInFloat: 0,\n            tickAmount: 3,\n            min: 50,\n            max: 100,\n            title: {\n              text: 'Temperature (Â°F)',\n              style: {},\n            },\n          },\n\n          {\n            // seriesName: 'Humidity',\n            decimalsInFloat: 0,\n            tickAmount: 3,\n            opposite: true,\n            min: 50,\n            max: 100,\n            title: {\n              text: 'Humidity (%)',\n              style: {},\n            },\n          },\n        ],\n      },\n    }\n  },\n  computed: {\n    ...mapGetters({\n      vivStore: 'vivStore',\n    }),\n    stats() {\n      return `\n        Temperature: ${this.vivStore.humiture.temperature}<br/>\n        Humidity: ${this.vivStore.humiture.humidity}<br/><br/>\n\n        Waterbowl State: ${\n          this.vivStore.water.sensor.state\n            ? '<span style=\"background: green; color: black;\">Full</span>'\n            : '<span style=\"background: red; color: black;\">Empty</span>'\n        }<br/><br/>\n\n        Waterpump: ${\n          this.vivStore.water.pump.state\n            ? '<span style=\"background: green; color: black;\">Running</span>'\n            : '<span style=\"background: red; color: black;\">Off</span>'\n        }<br/>\n        Waterpump Automation: ${\n          this.vivStore.water.pump.automate ? 'Automatic' : 'Manual'\n        }<br/>\n        Waterpump Countdown: ${prettyMilliseconds(\n          this.vivStore.water.pump.countdown\n        )}<br/>\n        Waterpump Runtime: ${prettyMilliseconds(\n          this.vivStore.water.pump.runtime\n        )}<br/><br/>\n\n        Mister: ${\n          this.vivStore.mister.state\n            ? '<span style=\"background: green; color: black;\">Running</span>'\n            : '<span style=\"background: red; color: black;\">Off</span>'\n        }<br/>\n        Mister Automation: ${\n          this.vivStore.mister.automate ? 'Automatic' : 'Manual'\n        }<br/>\n        Mister Countdown: ${prettyMilliseconds(\n          this.vivStore.mister.countdown\n        )}<br/>\n        Mister Runtime: ${prettyMilliseconds(\n          this.vivStore.mister.runtime\n        )}<br/><br/>\n\n        Lights: ${\n          this.vivStore.lights.state\n            ? '<span style=\"background: green; color: black;\">On</span>'\n            : '<span style=\"background: red; color: black;\">Off</span>'\n        }<br/>\n        Lights Automation: ${\n          this.vivStore.lights.automate ? 'Automatic' : 'Manual'\n        }<br/>\n        Lights Countdown: ${prettyMilliseconds(\n          this.vivStore.lights.countdown\n        )}<br/>\n        Lights Runtime: ${prettyMilliseconds(\n          this.vivStore.lights.runtime\n        )}<br/><br/>\n\n        Sunrise: ${this.secondsToTime(this.vivStore.lights.sunrise)}a<br/>\n        Sunset: ${this.secondsToTime(this.vivStore.lights.sunset)}p\n      `\n    },\n  },\n  watch: {\n    vivStore: {\n      deep: true,\n      handler: function (val, oldVal) {\n        this.lightsStatus = val.lights.state\n      },\n    },\n  },\n  mounted() {\n    this.lightsStatus = this.vivStore.lights.state\n    this.updateChart()\n    setInterval(() => {\n      this.updateChart()\n    }, 1000)\n\n    // Reset the dataset to prevent memory leak\n    setInterval(() => {\n      this.chartSeries.forEach((series) => {\n        series.data = series.data.slice(series.data.length - 20)\n      })\n    }, 1000 * 60 * 60)\n  },\n  methods: {\n    secondsToTime(t) {\n      const dt = new Date(t)\n      const hr = (dt.getHours() + 24) % 12 || 12\n      const m = '0' + dt.getMinutes()\n\n      return hr + ':' + m.substr(-2)\n    },\n    updateChart() {\n      const time = new Date().getTime()\n      let chartSeries = JSON.parse(JSON.stringify(this.chartSeries))\n      chartSeries[0].data.push({\n        x: time,\n        y: this.vivStore.humiture.humidity,\n      })\n\n      chartSeries[1].data.push({\n        x: time,\n        y: this.vivStore.humiture.temperature,\n      })\n      this.chartSeries = chartSeries\n      if (process.client) {\n      }\n    },\n    async switchLight() {\n      const status = +!this.lightsStatus\n      await this.$axios.get(`/api/proxy/lights/${status}`)\n    },\n    async runMister() {\n      await this.$axios.get('/api/proxy/mist')\n    },\n  },\n}\n","import mod from \"-!../node_modules/babel-loader/lib/index.js??ref--2-0!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js??ref--2-0!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=7dab982c&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nfunction injectStyles (context) {\n  \n  var style0 = require(\"./index.vue?vue&type=style&index=0&lang=css&\")\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  \"0ca725ab\"\n  \n)\n\nexport default component.exports"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;AACA;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AADA;AAGA;AACA;AADA;AAdA;AAkBA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AASA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AANA;AAdA;AA4BA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAPA;AAlGA;AAZA;AA6HA;AACA;AAEA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAKA;AAEA;AAGA;AACA;AAIA;AAKA;AAEA;AAGA;AACA;AAIA;AAKA;AAEA;AAGA;AACA;AAGA;AACA;AAxDA;AA0DA;AACA;AAhEA;AAiEA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA/BA;AAzNA;;ACxCA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}